# Generated by Django 4.2.9 on 2024-02-18 09:13

from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtaildocs', '0012_uploadeddocument'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
    ]

    operations = [
        migrations.CreateModel(
            name='Choriste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('pupitre', models.CharField(choices=[('Tutti', 'Tutti'), ('Soprano', 'Soprano'), ('Alto', 'Alto'), ('Ténor', 'Ténor'), ('Basse', 'Basse'), ('Autre', 'Autre')], max_length=25)),
                ('mail', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='ChoristesIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('repetition', models.BooleanField(default=True)),
                ('pupitre', models.CharField(choices=[('Tutti', 'Tutti'), ('Soprano', 'Soprano'), ('Alto', 'Alto'), ('Ténor', 'Ténor'), ('Basse', 'Basse'), ('Autre', 'Autre')], max_length=25)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('start_hour', models.TimeField(null=True)),
                ('end_hour', models.TimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MorceauIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('introduction', models.TextField(blank=True, help_text='Text to describe the page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='NewsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('titre', models.CharField(max_length=250, null=True)),
                ('auteur', models.CharField(max_length=250, null=True)),
                ('date', models.DateField(verbose_name='Post date')),
                ('message', wagtail.fields.RichTextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='MorceauPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('titre', models.CharField(max_length=250, null=True)),
                ('compositeur', models.CharField(max_length=250, null=True)),
                ('descr', wagtail.fields.RichTextField(blank=True)),
                ('traduction', wagtail.fields.RichTextField(blank=True)),
                ('interpretation', wagtail.fields.RichTextField(blank=True)),
                ('audios', wagtail.fields.StreamField([('audios', wagtail.blocks.StructBlock([('pupitre', wagtail.blocks.ChoiceBlock(choices=[('Tutti', 'Tutti'), ('Soprano', 'Soprano'), ('Alto', 'Alto'), ('Ténor', 'Ténor'), ('Basse', 'Basse')], required=False)), ('custom_pupitre', wagtail.blocks.CharBlock(help_text='Entrer une valeur ici annule le champ ci-dessus.', max_length=30, required=False)), ('audio', wagtail.documents.blocks.DocumentChooserBlock(help_text='Sélectionnez un fichier audio', required=False)), ('comment', wagtail.blocks.CharBlock(help_text='Un petit mot ?', max_length=255, required=False))]))], blank=True, null=True, use_json_field=True)),
                ('additional_files', wagtail.fields.StreamField([('section', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('audios', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('pupitre', wagtail.blocks.ChoiceBlock(choices=[('Tutti', 'Tutti'), ('Soprano', 'Soprano'), ('Alto', 'Alto'), ('Ténor', 'Ténor'), ('Basse', 'Basse')], required=False)), ('custom_pupitre', wagtail.blocks.CharBlock(help_text='Entrer une valeur ici annule le champ ci-dessus.', max_length=30, required=False)), ('audio', wagtail.documents.blocks.DocumentChooserBlock(help_text='Sélectionnez un fichier audio', required=False)), ('comment', wagtail.blocks.CharBlock(help_text='Un petit mot ?', max_length=255, required=False))], required=False))), ('files', wagtail.blocks.ListBlock(wagtail.documents.blocks.DocumentChooserBlock(required=False)))]))], blank=True, null=True, use_json_field=True)),
                ('pdf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CalendrierPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('comment', wagtail.fields.RichTextField(blank=True, help_text='Un espace pour ajouter des commentaires : les changements récents, les prochaines dates...')),
                ('calendrier_image', models.ForeignKey(help_text='Le calendrier en format image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
